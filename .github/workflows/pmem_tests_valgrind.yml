# Run all tests with valgrind on PMEM.
#
# This workflow is run on 'self-hosted' runners.
name: PMEM tests w/ valgrind

on:
  workflow_dispatch:
  schedule:
    # run this job at 18:00 UTC every other day (odd-numbered)
    - cron:  '0 18 */2 * *'

permissions: {}

jobs:
  # Test the default build with the basic test suite.
  Basic:
    name: Basic w/ Valgrind
    uses: ./.github/workflows/pmem_test_matrix.yml
    with:
      force_enable: '["none"]'
      valgrind: 1


  # Test the default build with force-enabled Valgrind tooling for (persistent)
  # memory error detection.
  Memory:
    uses: ./.github/workflows/pmem_test_matrix.yml
    with:
      force_enable: '["pmemcheck", "memcheck"]'
      valgrind: 1


  # Test the default build with force-enabled Valgrind tooling for thread error
  # detection.
  Thread:
    uses: ./.github/workflows/pmem_test_matrix.yml
    with:
      force_enable: '["drd", "helgrind"]'
      valgrind: 1
      # 12h = 720m (arbitrarily picked in hope it will be enough).
      timeout_minutes: 720


  # Static builds are tested in this limited scope only.
  static:
    name: Static
    if: github.repository_owner == 'daos-stack'
    runs-on: [self-hosted, pmdk, rhel]
    strategy:
      fail-fast: false
      matrix:
        build: [static_debug, static_nondebug]

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Test prepare
        uses: ./.github/actions/pmem_test_prepare
        with:
          valgrind: 1

      - name: Test run
        uses: ./.github/actions/pmem_test_run
        with:
          build: ${{ matrix.build }}


  # Testing the fault injection scenarios requires including this capability
  # at compile time.
  fault_injection:
    name: Fault injection
    if: github.repository_owner == 'daos-stack'
    runs-on: [self-hosted, pmdk, rhel]

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Test prepare
        uses: ./.github/actions/pmem_test_prepare
        with:
          fault_injection: '1'
          valgrind: 1

      - name: Test run
        uses: ./.github/actions/pmem_test_run
        with:
          build: nondebug # only the production build is considered
          test_label: fault_injection # only dedicated scenarios
